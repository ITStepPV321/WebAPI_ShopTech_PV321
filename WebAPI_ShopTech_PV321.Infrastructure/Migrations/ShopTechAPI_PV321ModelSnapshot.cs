// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI_ShopTech_PV321.Infrastructure.Data;

#nullable disable

namespace WebAPI_ShopTech_PV321.Infrastructure.Migrations
{
    [DbContext(typeof(ShopTechAPI_PV321))]
    partial class ShopTechAPI_PV321ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI_ShopTech_PV321.Infrastructure.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "None",
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            Description = "None",
                            Name = "Smartphone"
                        },
                        new
                        {
                            Id = 3,
                            Description = "None",
                            Name = "Electronic"
                        });
                });

            modelBuilder.Entity("WebAPI_ShopTech_PV321.Infrastructure.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Екран 15.6\" IPS (1920x1080) Full HD 144 Гц, матовый / AMD Ryzen 7 5700U (1.8 - 4.3 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce RTX 3050, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / черний",
                            ImagePath = "https://content.rozetka.com.ua/goods/images/big_tile/451110968.jpg",
                            Price = 20354m,
                            Title = "Ноутбук Acer Aspire 7 A715-42G-R7BK (NH.QE5EU.00L) Charcoal Black"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Екран 15.6\" IPS (1920x1080) FullHD / Intel Jasper Lake N5100 (2.8 ГГц) / RAM 8 ГБ / SSD 2560020ГБ / Intel UHD Graphics / Wi-Fi 6 / Bluetooth 5 / веб-камера / Windows 11 Home (64bit) / 1.6 кг / Титан.",
                            ImagePath = "https://content.rozetka.com.ua/goods/images/big_tile/451110968.jpg",
                            Price = 30454m,
                            Title = "Ноутбук CHUWI GemiBook X (8/256) (CW-102596)"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Екран 14” IPS (2160x1440) Full HD, глянцевий з покриттям проти відблиску/Intel Celeron N5100 (1.1 — 2.8 ГГц)/RAM 8 ГБ/SSD 256 ГБ/Intel UHD Graphics/без ОД/Wi-Fi/Bluetooth/вебкамера/Windows 10 Home/1.5 кг/темно-сірий",
                            ImagePath = "https://content.rozetka.com.ua/goods/images/big_tile/451110968.jpg",
                            Price = 28454m,
                            Title = "Ноутбук Chuwi GemiBook PRO 2K-IPS Jasper Lake (CW-102545/GBP8256) Space Gray"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A17 Pro / основна потрійна камера: 48 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 17",
                            ImagePath = "https://content1.rozetka.com.ua/goods/images/big_tile/364834187.jpg",
                            Price = 28454m,
                            Title = "Мобільний телефон Apple iPhone 15 Pro Max 256GB Black"
                        });
                });

            modelBuilder.Entity("WebAPI_ShopTech_PV321.Infrastructure.Entities.Product", b =>
                {
                    b.HasOne("WebAPI_ShopTech_PV321.Infrastructure.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebAPI_ShopTech_PV321.Infrastructure.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
